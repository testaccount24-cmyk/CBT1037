DALS     TITLE 'D I S A S M L S  ***  PRODUCE COMPLETE SYSPRINT SOURCE'
***********************************************************************
**                                                                   **
**  DISASMLS - PROGRAM TO READ SYSPRINT OUTPUT AND PRODUCE (SOME?)   **
**       SOURCE, WITH OR WITHOUT EXPANSION OF MACRO AND COPY CODE    **
**                                                                   **
**  INPUT:  DD DISLIST - ASSEMBLER LISTING.                          **
**                                                                   **
**  OUTPUT: DD DISPRINT - SOURCE, WITH ASSEMBLER OFFSETS, ETC.       **
**                                                                   **
**          DD DISPUNCH - SOURCE IN CARD FORMAT                      **
**                                                                   **
**  OPTIONS (SET IN DISASM02):                                       **
**         ASM    - PRINT SOURCE WITH ANNOTATIONS (DEFAULT)          **
**         NOMAC  - DO NOT PUNCH MACRO EXPANSIONS (DEFAULT)          **
**         NOCOPY - DO NOT PUNCH COPY INCLUDED CODE (DEFAULT)        **
**         MAC    - PUNCH MACRO EXPANSION; COMMENT MACRO INVOCATION  **
**         COPY   - PUNCH COPIED CODE; COMMENT COPY STATEMENT        **
**                                                                   **
**     (NOTE THAT A COPY INSIDE AN IN-LINE MACRO, AND A MACRO COPIED **
**      IN-LINE MAY PRODUCE UNEXPECTED OUTPUT)                       **
**                                                                   **
***********************************************************************
**                                                                   **
**  ADDED BY GERHARD POSTPISCHIL  JUNE 1999                          **
**                                                                   **
***********************************************************************
         COPY   DISASMGB
DISASMLS MODHEAD BASE=(R12)  ENTRY HOUSEKEEPING
         ITRACE ID=ENTRY
         TM    COMMDD,$PUNCHDD       IS DISPUNCH DD PRESENT?
         BNO   GEN0010               NO
         ITRACE ID=OPENPNCH
         OPEN  (DISPUNCH,OUTPUT)     OPEN DISPUNCH
         TM    DCBOFLGS-IHADCB+DISPUNCH,DCBOFOPN
         BZ    ABORTER
GEN0010  OPEN  MF=(E,DCBLIST2)       OPEN DISLIST
         TM    DCBOFLGS-IHADCB+LISTDCB,DCBOFOPN
         BZ    ABORTER
         BAL   R9,GETLINE    PRIME IT
         SPACE 1
DATAGET  BAL   R9,GETLINE    GET A RECORD
         SPACE 1
*   NOW PROCESS BY TYPE
*    OUTIND
*                                  SOURCE RECORD
*       +                          MACRO EXPANSION
*       C                          COPIED CODE
*   ONE RECORD IS STACKED TO ALLOW TESTING WHETHER THE NEXT RECORD
*   IS COPIED OR EXPANDED. IF SO, THE USER'S EXPANSION OPTIONS
*   ARE PROCESSED.

         CLI   OUTIND,C'C'   COPIED TEXT?
         BE    GOCOPY        YES
         CLI   OUTIND,C'+'   MACRO GENERATED?
         BE    GOMACRO
*  PRIMARY INPUT.
*
         CLI   NEXTREC+OUTIND-OUTREC,C'C'  IS NEXT RECORD A COPY?
         BE    ORG01COP      YES
         CLI   NEXTREC+OUTIND-OUTREC,C'+'  IS NEXT RECORD EXPANDED
         BE    ORG01MAC      YES
         B     GOPUNCH       NOTHING ELSE SPECIAL - PROCESS
         SPACE 1
ORG01COP TM    PRINTFG3,$PFCOPY   EXPAND COPY OUTPUT?
         BZ    GOPUNCH       NO; PUNCH AND PRINT THE COPY STATEMENT
         B     ORG01COM      MAKE COMMENT; THEN PRINT
         SPACE 1
ORG01MAC TM    PRINTFG3,$PFMAC   EXPAND MACRO OUTPUT?
         BZ    GOPUNCH       NO; PUNCH AND PRINT THE MACRO
ORG01COM MVI   OUTCARD,C'*'  PRINT AS COMMENT
         B     GOPUNCH       PUNCH AND PRINT AS COMMENT
         SPACE 2
*  EXPANSION RECORD (MACRO OR SUBSTITUTION)
*
GOMACRO  TM    PRINTFG3,$PFMAC   EXPAND MACROS?
         BZ    GOPRINT       NO; ONLY PRINT
         B     GOPUNCH       ELSE PUNCH AND PRINT
         SPACE 2
*  COPIED RECORD
*
GOCOPY   TM    PRINTFG3,$PFCOPY   EXPAND COPY CODE?
         BZ    GOPRINT       NO; ONLY PRINT
         B     GOPUNCH       ELSE PUNCH AND PRINT
         SPACE 2
GOPUNCH  BAL   R9,PUNCH000   PUNCH A CARD IMAGE
GOPRINT  TM    PRINTFG2,$PFASM   LIST ASSEMBLY CODE?
         BZ    DATACLR       NO
         BAL   R9,PRT0000    AND PRINT IT
         B     DATAGET       GET NEXT RECORD
DATACLR  BAL   R9,PRTCLEAR   CLEAR PRINT LINE
         B     DATAGET       GET NEXT RECORD
         SPACE 1
ABORTER  LA    R1,EMSG01
         B     EXIT0010
EXIT0000 TM    LOCFLAG,$PFHAVE  DID WE FIND ANYTHING?
         BNZ   EXIT0020      YES
         LA    R1,EMSG02
EXIT0010 BAL   R14,PRINTMSG  ISSUE ERROR MESSAGE
         OI    COMMFLAG,$ABORT+$ERROR SET FLAGS
EXIT0020 CLOSE MF=(E,DCBLIST)  CLOSE OUTPUT DCBS
         SPACE 1
         ITRACE ID=EXIT
         LH    R15,CONDCODE  GET RETURN CODE
         L     R13,4(,R13)   RESTORE REGISTER 13
         L     R14,12(,R13)   RESTORE RETURN
         LM    R0,R12,20(R13)  RESTORE OTHER REGISTERS
         BR    R14           RETURN TO CALLER
         TITLE 'D I S A S M L S  ***  SUBROUTINES'
***********************************************************************
*                                                                     *
*  GETLINE    SKIP UNTIL STMT LINE FOUND, THEN READ ONE AHEAD         *
*    SKIP UNLESS VALID STMT NUMBER (LEADING BLANKS, NO LD 0, >0)      *
*                                                                     *
***********************************************************************
GETLINE  STM   R2,R15,GETLSAVE  SAVE IMPORTANT (?) REGISTERS
         TM    LOCFLAG,$PFEOD2   SECOND END?
         BNZ   EXIT0000      ALL CLEARED OUT?
         TM    LOCFLAG,$PFEOD1   FIRST CALL AFTER EOF?
         BZ    GETLINEF      NO
         XI    LOCFLAG,$PFEOD1+$PFEOD2   TOGGLE
         B     GETLINEX
GETLINEF TM    LOCFLAG,$PFSTMT  FOUND STATEMENT?
         BNZ   GETLINES      YES; LOOK FOR SOURCE
GETLINEG GET   LISTDCB       GET A CARD
         LA    R0,7
         LA    R15,34(,R1)
GETLINEH CLC   =C' STMT   S',0(R15)  SUBHEADER?
         BE    GETLINEI
         CLC   =C' Stmt   S',0(R15)  SUBHEADER?
         BE    GETLINEI
         LA    R15,1(,R15)   TRY NEXT COLUMN
         BCT   R0,GETLINEH
         B     GETLINEG
GETLINEI LA    R15,7
         SR    R15,R0        GET OFFSET
         ST    R15,TEXTOFF   SAVE IT
         A     R1,TEXTOFF    ADJUST
         MVC   SUBHEAD,0(R1) SAVE AS SUBHEADER
         OI    LOCFLAG,$PFSTMT
         TM    PRINTFG2,$PFASM       PRINT ASSEMBLY TEXT ?
         BZ    GETLINES              NO
         MVC   COMMSUBH(SUBHEADL),SUBHEAD
         LA    R1,SUBHEADL           SUBHEADING LENGTH
         STH   R1,COMMSUBL           SET LENGTH
         MVI   COMMSUBL,X'FF'        SET NON-CENTERED INDICATOR
         MVI   PRTCMD,$PRTHEAD       SET COMMAND
         BAL   R14,PRINTDAT          PRINT SUBHEADER
GETLINES MVC   OUTREC,NEXTREC  PROPAGATE PREVIOUS TO CURRENT
         CLI   OUTCCONT,C' '   CONTINUATION?                    GP05089
         BZ    GETLINET      NO                                 GP05089
         OI    LOCFLAG,$PFCONT  SET IT ON                       GP05089
GETLINET GET   LISTDCB       READ ANOTHER
         LR    R0,R1         GET START
         LH    R1,DCBLRECL-IHADCB+LISTDCB  GET LENGTH
         A     R0,TEXTOFF    ADJUST FOR RDW, CARRIAGE CONTROL, ETC.
         S     R1,TEXTOFF
         BNP   GETLINET      SKIP IT
         LA    R14,NEXTREC
         LA    R15,L'NEXTREC
         ICM   R1,8,COMMBLKS  REQUEST BLANK FILL
         MVCL  R14,R0        MOVE
         CLI   NEXTREC+OUTSTMT-OUTREC-1,C' '   LEADING BLANK?
         BNE   GETLINET      NO; IGNORE
         TM    LOCFLAG,$PFCONT  LOOKING FOR CONTINUATION ?      GP05089
         BZ    GETALINE      NO                                 GP05089
         CLC   NEXTREC+OUTSTMT-OUTREC-1(L'OUTSTMT),NEXTREC+OUTSTMT-OUTR*
               EC            BLANK SEQUENCE ?                   GP05089
         BNE   GETLINET      NO; SKIP                           GP05089
         CLC   NEXTREC(34),NEXTREC+1  ALL/MOSTLY BLANK?         GP05089
         BNE   GETLINET      NO; IGNORE                         GP05089
         MVC   NEXTREC+OUTIND-OUTREC(1),OUTIND  INHERIT +/C     GP05089
         NI    LOCFLAG,255-$PFCONT  SET IT OFF                  GP05089
         B     GETLINEX      PASS IT BACK                       GP05089
         SPACE 1                                                GP05089
GETALINE CLI   NEXTREC+OUTSTMT-OUTREC+L'OUTSTMT-1,C'0'   TRAIL. DIGIT?
         BL    GETLINET      NO; IGNORE
         TRT   NEXTREC+OUTSTMT-OUTREC(L'OUTSTMT),NONBLK
         BZ    GETLINET
         CLI   0(R1),C'0'    NUMERIC START?
         BNH   GETLINET
         TRT   NEXTREC+OUTSTMT-OUTREC(L'OUTSTMT),NONDIG
         BNZ   GETLINET
         CLI   NEXTREC+OUTCARD-OUTREC,C' '  NAME FIELD PRESENT?
         BNE   GETLINEX      YES
         TRT   NEXTREC+OUTCARD-OUTREC+1(71),NONBLK  LOOK FOR TEXT
         BZ    GETLINEX      HUH?
         CLI   0(R1),C'='    LITERAL ?
         BE    GETLINET      YES; SKIP
GETLINEX LM    R2,R15,GETLSAVE  RESTORE REGISTERS
         BR    R9
EODAD    OI    LOCFLAG,$PFEOD1 SHOW FIRST END CALL
         MVC   NEXTREC,NEXTREC-1
         B     GETLINEX      EXIT
         SPACE 2
***********************************************************************
**                                                                   **
**   PUNCH OUTPUT  (WHEN DISPUNCH DD PRESENT)                        **
**                                                                   **
***********************************************************************
PUNCH000 OI    LOCFLAG,$PFHAVE
         TM    COMMDD,$PUNCHDD       IS DISPUNCH DD PRESENT?
         BNOR  R9                    NO
         PUT   DISPUNCH,OUTCARD      PUNCH SOURCE STATEMENT
         BR    R9                    RETURN
         SPACE 1
***********************************************************************
**                                                                   **
**   PRINT OUTPUT  (WHEN WANTED)                                     **
**                                                                   **
**   PRT0000 PRINT THE CURRENT PRINT LINE AS IS                      **
**                                                                   **
***********************************************************************
         SPACE 1
PRT0000  LA    R15,PRINTREC  SET TO PRINT AND CLEAR RECORD
         TM    COMMFLAG,$ERROR       ERROR MESSAGE?
         BNZ   PRT0010               YES; PRINT IT
         TM    PRINTFG2,$PFASM       PRINT ASSEMBLY OUTPUT?
         BNZ   PRT0010               YES
PRTCLEAR LA    R15,PRINTCLR  SET TO CLEAR PRINT LINE
PRT0010  BALR  R14,R15       PRINT & CLEAR, OR JUST CLEAR
         BR    R9                    RETURN
         SPACE 2
         LTORG ,
         TITLE 'D I S A S M L S  ***  DATA/WORK AREAS/MAPPINGS'
DCBLIST  OPEN  (DISPUNCH,OUTPUT,LISTDCB,(INPUT,REREAD)),MF=L
DCBLIST2 EQU   DCBLIST+4,4,C'A'
DISPUNCH DCB   DDNAME=DISPUNCH,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80
LISTDCB  DCB   DDNAME=DISLIST,DSORG=PS,MACRF=GL,EODAD=EODAD
         SPACE 1
GETLSAVE DS    16A           DUMPLINE SAVE AREA
TEXTOFF  DC    F'0'          INDENT FROM START OF PHYSICAL RECORD
CONDCODE DC    H'0'          CONDITION CODE
LOCFLAG  DC    X'00'         LOCAL PROCESSING FLAGS
$PFEOD1  EQU   X'80'           EODAD ENTERED
$PFEOD2  EQU   X'40'           LOGICAL END PROCESSED
$PFCONT  EQU   X'20'           CONTINUATION CARD FOLLOWS        GP05089
$PFHAVE  EQU   X'02'           PROCESSABLE RECORD FOUND
$PFSTMT  EQU   X'01'           STMT RECORD FOUND
         SPACE 1
EMSG01   DC    AL1(L'EMSG01T)
EMSG01T  DC    C'DISASMLS01E  **** DATASET OPEN UNSUCCESSFUL ****'
EMSG02   DC    AL1(L'EMSG02T)
EMSG02T  DC    C'DISASMLS02E  **** NO PROCESSABLE SOURCE RECORDS FOUND *
               ****'
         SPACE 1
NEXTREC  DC    CL132' '
         SPACE 1
         SPACE 1
SUBHEAD  DC    CL132' '
SUBHEADL EQU   *-SUBHEAD
         SPACE 2
NONBLK   DC    256X'FF'      STOP ON NON-BLANK
         ORG   NONBLK+C' '
         DC    X'00'         AND PASS BLANKS
         ORG   ,
NONDIG   DC    256X'FF'      STOP ON NON-BLANK, NON-DIGIT
         ORG   NONDIG+C' '
         DC    X'00'         AND PASS BLANKS
         ORG   NONDIG+C'0'
         DC    10X'00'       AND PASS DIGITS
         ORG   ,
         SPACE 1
         DCBD  DSORG=PS,DEVD=DA   DCB MAPPING
         SPACE 2
         COPY  DISASMDA
*---------------------------------------------------------------------*
*                                                                     *
*              COMMON DATA MAP                                        *
*                                                                     *
*---------------------------------------------------------------------*
DISASM00 DISASMCM TYPE=DSECT
DISASM00 DSECT ,             BACK TO WANTED DSECT
         ORG   PRTDATA
OUTREC   DS    0CL(L'NEXTREC)  ENTIRE PRINT LINE
OUTLCTR  DS    CL6,C         LOCATION COUNTER
         DS    3CL(4+1)      TEXT
         DS    2CL(5+1)      ADDR1/2
OUTSTMT  DS    CL5           STATEMENT NUMBER
OUTIND   DS    C             ADD INDICATOR
OUTCARD  DS    0CL80         SOURCE RECORD                      GP05089
OUTCTEXT DS    CL71            TEXT OF RECORD                   GP05089
OUTCCONT DS    C               CONTINUATION INDICATOR           GP05089
OUTCSEQ  DS    CL8             (OPT.) SEQUENCE                  GP05089
         ORG   ,
         END   ,
